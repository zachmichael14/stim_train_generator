from PySide6.QtWidgets import QDoubleSpinBox

class DebouncedDoubleSpinBox(QDoubleSpinBox):
    def __init__(self, parent=None):
        super().__init__(parent)        
        self.valueChanged.connect(self.on_value_changed)
    
    def on_value_changed(self, value):
        # Check if the spin box has focus (indicates typing) or if it's an arrow key increment
        if self.hasFocus():
            self.editingFinished.connect(self.emit_debounced_signal)
        else:
            # Arrow key pressed, emit signal immediately
            self.emit_debounced_signal()
    
    def emit_debounced_signal(self):
        # Emit the value here when debounce time passes or arrow keys are used
        print(f"Debounced value: {self.value()}")  # Replace with desired signal
